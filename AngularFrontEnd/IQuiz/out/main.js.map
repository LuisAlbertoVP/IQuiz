{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/http-error-handler.service.ts","./src/app/http-interceptors/auth-interceptor.ts","./src/app/http-interceptors/index.ts","./src/environments/environment.ts","./src/main.ts","crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'principal',\n    pathMatch: 'full'\n  },\n  {\n    path: 'principal',\n    loadChildren: () => import('./principal/principal.module').then(m => m.PrincipalModule),\n    canLoad: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`\n})\nexport class AppComponent implements OnInit{\n  title = 'IQuiz';\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './auth/auth.module';\nimport { HttpErrorHandlerService } from './http-error-handler.service';\nimport { httpInterceptorProviders } from './http-interceptors/index';\n\n@NgModule({\n  declarations: [ AppComponent ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AuthModule\n  ],\n  providers: [\n    HttpErrorHandlerService,\n    httpInterceptorProviders\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login',  component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanLoad, CanActivateChild } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Route } from '@angular/compiler/src/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanLoad, CanActivateChild {\n\n  constructor(private service: AuthService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.checkLogin();\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n\n  canLoad(route: Route): boolean {\n    return this.checkLogin();\n  }\n\n  private checkDate(): boolean {\n    return Date.now() < Date.parse(this.service.getTokenExpiration());\n  }\n  \n  checkLogin(): boolean {\n    if(this.service.getAuthorizationToken() && this.checkDate()) { return true; }\n    this.service.logout();\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [ LoginComponent ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorHandlerService, HandleError } from '../http-error-handler.service';\nimport { User, Rol } from '@models/auth';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type':  'application/json' }),\n  observe: 'response' as const\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  apiIdentity: string = 'http://192.168.1.10:8000/identity';\n  private handleError: HandleError;\n\n  constructor(\n    private http: HttpClient, \n    httpErrorHandler: HttpErrorHandlerService\n  ) {\n    this.handleError = httpErrorHandler.createHandleError('AuthService');\n  }\n\n  addUser = (user: User) => this.http.post(`${this.apiIdentity}/crear`, user, httpOptions)\n      .pipe(catchError(this.handleError('addUser', user)));\n\n  login = (user: User) => this.http.post(`${this.apiIdentity}/login`, user, httpOptions)\n      .pipe(catchError(this.handleError('login', user)));\n\n  saveToken(user: User) {\n    localStorage.setItem('id', user.id);\n    localStorage.setItem('nombres', user.nombres);\n    localStorage.setItem('id_token', user.token.id);\n    localStorage.setItem('token_expiration', user.token.expiration);\n    localStorage.setItem('rol', (user.rol as Rol).descripcion);\n  }\n\n  logout() {\n    localStorage.removeItem('id');\n    localStorage.removeItem('nombres');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('token_expiration');\n    localStorage.removeItem('rol');\n  }\n\n  getAuthorizationToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  getTokenExpiration() {\n    return localStorage.getItem('token_expiration');\n  }\n\n  getNombres() {\n    return localStorage.getItem('nombres');\n  }\n\n  getRol() {\n    return localStorage.getItem('rol');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { User } from '@models/auth';\nimport * as CryptoJS from 'crypto-js';\nimport { v4 as uuid } from 'uuid';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide: boolean = true;\n  alert: boolean = false;\n  hasLogin: boolean = true;\n  formLogin = this.fb.group({\n    cedula: ['', Validators.required ],\n    clave: ['', Validators.required ]\n  });\n  formCuenta = this.fb.group({\n    cedula: ['', Validators.required ],\n    correoPersonal: ['', Validators.required ],\n    nombres: ['', Validators.required ],\n    clave: ['', Validators.required ]\n  });\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    public service: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    if(this.formLogin.valid) {\n      const user: User = this.formLogin.value;\n      user.clave = CryptoJS.SHA256(user.clave).toString();\n      this.service.login(user).subscribe((response: HttpResponse<User>) => {\n        if(response?.status == 200) {\n          this.service.saveToken(response.body);\n          this.router.navigate(['/principal']);\n        } else {\n          this.alert = true;\n        }\n      });\n    }\n  }\n\n  crear() {\n    if(this.formCuenta.valid) {\n      const user: User = this.formCuenta.value;\n      user.id = uuid();\n      user.clave = CryptoJS.SHA256(user.clave).toString();\n      this.service.addUser(user).subscribe((response: HttpResponse<Object>) => {\n        if(response?.status == 200) {\n          this.hasLogin = true;\n        } else {\n          this.alert = true;\n        }\n      });\n    } else {\n      this.formCuenta.markAllAsTouched();\n    }\n  }\n}\n","<div *ngIf=\"!service.getAuthorizationToken()\" class=\"login-screen\">\n  <ng-container *ngIf=\"hasLogin; else elseBlock\">\n    <h4 class=\"text-center mb-4 blue\">Iniciar sesión</h4>\n    <form [formGroup]=\"formLogin\" (ngSubmit)=\"login()\"> \n      <mat-form-field class=\"w-100 mb-3\">\n        <mat-label>Cedula</mat-label>\n        <input formControlName=\"cedula\" matInput placeholder=\"Ingrese cedula\" type=\"text\">\n        <mat-icon matSuffix [inline]=\"true\">person</mat-icon>\n        <mat-error *ngIf=\"formLogin.get('cedula').hasError('required')\">Cedula es requerida</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"w-100 mb-3\">\n        <mat-label>Contraseña</mat-label>\n        <input formControlName=\"clave\" matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Ingrese contraseña\">\n        <button mat-icon-button matSuffix (click)=\"hide = !hide; $event.preventDefault()\" >\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"formLogin.get('clave').hasError('required')\">Contraseña es requerida</mat-error>\n      </mat-form-field>\n      <div class=\"d-flex mt-1\">\n        <button mat-raised-button color=\"primary\" (click)=\"hasLogin=false; alert=false; $event.preventDefault()\">Crear cuenta</button>\n        <button mat-raised-button color=\"primary\" class=\"ml-auto\">Iniciar sesión</button>\n      </div>\n    </form>\n    <div class=\"alert alert-danger mt-5\" [style.display]=\"alert ? 'block' : 'none'\">Las credenciales son incorrectas</div>\n  </ng-container>\n  <ng-template #elseBlock>\n    <h4 class=\"text-center mb-4 blue\">Crear cuenta</h4>\n    <form [formGroup]=\"formCuenta\" (ngSubmit)=\"crear()\"> \n      <mat-form-field class=\"w-100 mb-3\">\n        <mat-label>Cedula</mat-label>\n        <input formControlName=\"cedula\" matInput placeholder=\"Ingrese cedula\" type=\"text\">\n        <mat-error *ngIf=\"formCuenta.get('cedula').hasError('required')\">Cedula es requerida</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"w-100 mb-3\">\n        <mat-label>Correo</mat-label>\n        <input formControlName=\"correoPersonal\" matInput placeholder=\"Ingrese correo\" type=\"text\">\n        <mat-error *ngIf=\"formCuenta.get('correoPersonal').hasError('required')\">Correo es requerido</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"w-100 mb-3\">\n        <mat-label>Nombres</mat-label>\n        <input formControlName=\"nombres\" matInput placeholder=\"Ingrese nombres\" type=\"text\">\n        <mat-error *ngIf=\"formCuenta.get('nombres').hasError('required')\">Nombres son requeridos</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"w-100 mb-3\">\n        <mat-label>Contraseña</mat-label>\n        <input formControlName=\"clave\" matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Ingrese contraseña\">\n        <button mat-icon-button matSuffix (click)=\"hide = !hide; $event.preventDefault()\" >\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"formLogin.get('clave').hasError('required')\">Contraseña es requerida</mat-error>\n      </mat-form-field>\n      <div class=\"d-flex mt-1\">\n        <button mat-raised-button color=\"primary\" (click)=\"hasLogin=true; alert=false; $event.preventDefault()\">Volver</button>\n        <button mat-raised-button color=\"primary\" class=\"ml-auto\">Guardar</button>\n      </div>\n    </form>\n    <div class=\"alert alert-danger mt-5\" [style.display]=\"alert ? 'block' : 'none'\">La cuenta ya existe</div>\n  </ng-template>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\n\nexport type HandleError =\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpErrorHandlerService {\n\n  constructor(private route: Router) { }\n\n  createHandleError = (serviceName = '') => <T>\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\n\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\n    return (error: HttpErrorResponse): Observable<T> => {\n      const message = (error.error instanceof ErrorEvent) ?\n        error.error.message : `codigo ${error.status} y cuerpo: \"${error.error}\"`;\n\n      console.log(`${serviceName}: ${operation} fallo con: ${message}`);\n\n      return of(result);\n    };\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { AuthService } from '@auth_service/AuthService';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.auth.getAuthorizationToken();\n    if(authToken) {\n      const authReq = req.clone({ setHeaders: { 'Authorization': 'Bearer ' + authToken } });\n      return next.handle(authReq);\n    }\n    return next.handle(req);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth-interceptor';\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}